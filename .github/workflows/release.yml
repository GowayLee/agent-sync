name: Release

on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to build (optional)"
        required: false
        default: ""

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.platform }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux-x86_64
            binary_ext: ""
          - os: macos-latest
            platform: darwin-arm64
            binary_ext: ""
          - os: windows-latest
            platform: windows-x86_64
            binary_ext: ".exe"
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout tree
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ -n "${{ github.event.inputs.tag }}" ]]; then
              echo "VERSION=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
            else
              echo "VERSION=dev-${{ github.sha }}" >> $GITHUB_OUTPUT
            fi
          else
            echo "VERSION=dev-${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Set-up OCaml
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5

      - name: Install dependencies
        run: opam install . --deps-only --with-test

      - name: Build
        run: opam exec -- dune build

      - name: Run tests
        run: opam exec -- dune runtest

      - name: Install
        run: opam install . --destdir _install

      - name: Package binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p release
          cp _install/bin/agent-sync release/agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}${{ matrix.binary_ext }}
          chmod +x release/agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}${{ matrix.binary_ext }}
          tar -czf agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}.tar.gz -C release agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}${{ matrix.binary_ext }}
          sha256sum agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}.tar.gz > agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}.tar.gz.sha256

      - name: Package binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p release
          copy _install\bin\agent-sync.exe release\agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}${{ matrix.binary_ext }}
          7z a agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}.zip release\agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}${{ matrix.binary_ext }}
          sha256sum agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}.zip > agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}.zip.sha256

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}
            ./agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifacts (Manual Build)
        uses: actions/upload-artifact@v4
        if: github.event_name == 'workflow_dispatch' && !startsWith(github.ref, 'refs/tags/')
        with:
          name: agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}
          path: |
            ./agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}
            ./agent-sync-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}.sha256
